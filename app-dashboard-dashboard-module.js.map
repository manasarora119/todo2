{"version":3,"sources":["webpack:///./src/app/dashboard/components/dashboard.component.html","webpack:///./src/app/dashboard/components/dashboard.component.scss","webpack:///./src/app/dashboard/components/dashboard.component.ts","webpack:///./src/app/dashboard/components/index.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/dashboard.routes.ts"],"names":[],"mappings":"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","file":"app-dashboard-dashboard-module.js","sourcesContent":["module.exports = \"<div class=\\\"row fixed-page-title\\\">\\n  <div class=\\\"col-sm-6 col-xs-12\\\">\\n    <h4 class=\\\"page_title\\\">TO DO LIST</h4>\\n  </div>\\n</div>\\n\\n<div class=\\\"row body-content\\\">\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n    <div class=\\\"panel panel-default\\\">\\n   \\n      <mat-form-field >\\n        <mat-label>Autosize textarea</mat-label>\\n        <textarea matInput\\n        [(ngModel)]=\\\"noteValue\\\"\\n       \\n                  cdkTextareaAutosize\\n                  #autosize=\\\"cdkTextareaAutosize\\\"\\n                  cdkAutosizeMinRows=\\\"1\\\"\\n                  cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n      </mat-form-field>\\n\\n\\n\\n\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".dashboard {\\n  color: #fff; }\\n\\n.textarea {\\n  margin: 10px;\\n  resize: none; }\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\n\nimport { LoaderService } from \"@app/core/services\";\n// import { DashboardService } from \"./../services/dashboard.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n// import { BroadcastDService } from \"../services\";\nimport { Subscription } from \"rxjs\";\n// import { BroadcastService } from \"src/app/core/services\";\nimport { BroadcastService } from \"@app/core/services\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit {\n\n\n  private emailBroadcastListner: Subscription;\n\n  noteValue = \"Default Hello\";\n  id: any;\n  constructor(\n    private route: ActivatedRoute,\n\n    private toastr: ToastrService,\n    private broadcast: BroadcastService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    console.log(\"Init\");\n    \n    this.route.paramMap.subscribe(params => {\n      this.id = Number(params['params']['id'])\n      console.log(params['params']['id'], \" parmasssss\")\n    });\n    this.emailBroadcastListner = this.broadcast.listen().subscribe((res) => {\n      setTimeout(() => {\n\n        console.log(JSON.parse(localStorage.getItem(\"data\")), this.id)\n\n        if (res.event.name === 'save') {\n          this.router.navigate([\"/dashboard\"]);\n\n\n          let data = JSON.parse(localStorage.getItem(\"data\")) || []\n          data.push({\n            id: this.id,\n            value: this.noteValue || \"Default Hello\"\n          })\n          localStorage.setItem(\"data\", JSON.stringify(data))\n          this.noteValue = \"\"\n          console.log(JSON.parse(localStorage.getItem(\"data\")), this.id)\n          this.broadcast.publish({\n            name: 'getdata',\n            // data:  thi,\n          });\n        }\n        if (res.event.name === 'add') {\n          let data = JSON.parse(localStorage.getItem(\"data\")) || []\n          data.push({\n            id: this.id,\n            value: this.noteValue || \"Default Hello\"\n          })\n          localStorage.setItem(\"data\", JSON.stringify(data))\n\n          this.id = this.id + 1\n          this.router.navigate([\"/dashboard/\" + this.id]);\n          this.noteValue = \"\"\n          this.broadcast.publish({\n            name: 'getdata',\n            // data:  thi,\n          });\n          // this.user.user_email = res.event.data;\n        }\n\n      }, 0)\n\n\n    });\n\n\n\n\n  }\n  ngOnDestroy() {\n    // this.broadcast.unsubscribeListener(this.broadcastListener);\n    this.emailBroadcastListner.unsubscribe();\n\n  }\n\n\n}\n","export { DashboardComponent } from './dashboard.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// import { SharedModule } from '@';\nimport { DLVMaterialModule } from 'dlv-material';\nimport { DashboardRoutesModule } from './dashboard.routes';\nimport { DashboardComponent } from './components';\n// import { DashboardService ,BroadcastDService } from './services';\nimport { ReactiveFormsModule } from '@angular/forms';\n// import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; \n// import { ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DashboardRoutesModule,\n    SharedModule,\n    \n    FormsModule,\n\n    ReactiveFormsModule,\n \n    DLVMaterialModule\n  ],\n  declarations: [\n    DashboardComponent\n  ],\n  providers : [\n    // DashboardService,BroadcastDService\n  ]\n})\nexport class DashboardModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// import { AuthGuardService } from '@app/core/services';\n\nimport { DashboardComponent } from './components';\n\n\nconst dashboardRoutesModule: Routes = [\n\n    {\n        path: ':id',\n        component: DashboardComponent,\n        data: { title: 'Dashboard' }\n    }\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(dashboardRoutesModule)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\n\nexport class DashboardRoutesModule {\n}\n"],"sourceRoot":""}