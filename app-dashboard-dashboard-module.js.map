{"version":3,"sources":["webpack:///./src/app/dashboard/components/dashboard.component.html","webpack:///./src/app/dashboard/components/dashboard.component.scss","webpack:///./src/app/dashboard/components/dashboard.component.ts","webpack:///./src/app/dashboard/components/index.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/dashboard.routes.ts"],"names":[],"mappings":"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","file":"app-dashboard-dashboard-module.js","sourcesContent":["module.exports = \"<div class=\\\"row fixed-page-title\\\">\\n  <div class=\\\"col-sm-6 col-xs-12\\\">\\n    <h4 class=\\\"page_title\\\">TO DO LIST</h4>\\n  </div>\\n</div>\\n\\n<div class=\\\"row body-content\\\">\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n    <div class=\\\"panel panel-default\\\">\\n   \\n      <mat-form-field >\\n        <mat-label>Autosize textarea</mat-label>\\n        <textarea matInput\\n        [(ngModel)]=\\\"noteValue\\\"\\n       \\n                  cdkTextareaAutosize\\n                  #autosize=\\\"cdkTextareaAutosize\\\"\\n                  cdkAutosizeMinRows=\\\"1\\\"\\n                  cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n      </mat-form-field>\\n\\n\\n\\n\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".dashboard {\\n  color: #fff; }\\n\\n.textarea {\\n  margin: 10px;\\n  resize: none; }\\n\\n.mat-form-field {\\n  width: 100%;\\n  padding: 10px; }\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\n\nimport { LoaderService } from \"@app/core/services\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { BroadcastService } from \"@app/core/services\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit {\n\n\n  private emailBroadcastListner: Subscription;\n\n  noteValue = \"Hello\";\n  id: any;\n  constructor(\n    private route: ActivatedRoute,\n\n    private toastr: ToastrService,\n    private broadcast: BroadcastService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    console.log(\"Init\");\n\n    this.route.paramMap.subscribe(params => {\n      this.id = Number(params['params']['id'])\n      console.log(params['params']['id'], \" parmasssss\")\n      let data = JSON.parse(localStorage.getItem(\"data\")) || []\n      const checkUsername = obj => obj.id === this.id;\n      if (data.some(checkUsername)) {\n        let obj = data.find((o, i) => {\n          if (o.id === this.id) {\n            this.noteValue = o.value;\n            return true; // stop searching\n          }\n        });\n      }\n    });\n    this.emailBroadcastListner = this.broadcast.listen().subscribe((res) => {\n      setTimeout(() => {\n        if (res.event.name === 'save') {\n          this.router.navigate([\"/dashboard\"]);\n          let data = JSON.parse(localStorage.getItem(\"data\")) || []\n          const checkUsername = obj => obj.id === this.id;\n\n          if (data.some(checkUsername)) {\n            let obj = data.find((o, i) => {\n              if (o.id === this.id) {\n                // this.noteValue = o.value;\n                data[i] = { id: this.id, value:this.noteValue  ,  time: new Date().valueOf() };\n                return true; // stop searching\n              }\n            });\n          }\n          else {\n            data.push({\n              id: this.id,\n              time: new Date().valueOf(),\n              value: this.noteValue || \"Hello\"\n            })\n          }\n          localStorage.setItem(\"data\", JSON.stringify(data))\n          this.noteValue = \"\"\n          this.broadcast.publish({\n            name: 'getdata',\n            // data:  thi,\n          });\n        }\n        if (res.event.name === 'add') {\n          let data = JSON.parse(localStorage.getItem(\"data\")) || []\n          console.log(JSON.parse(localStorage.getItem(\"counter\")), \"counter\", res.event.name, this.id)\n         \n          const checkUsername = obj => obj.id === this.id;\n\n          if (data.some(checkUsername)) {\n            let obj = data.find((o, i) => {\n              if (o.id === this.id) {\n                // this.noteValue = o.value;\n                data[i] = { id: this.id, value:this.noteValue  ,  time: new Date().valueOf() };\n                return true; // stop searching\n              }\n            });\n          }\n          else {\n            data.push({\n              id: this.id - 1,\n              time: new Date().valueOf(),\n              value: this.noteValue || \"Hello\"\n            })\n          }\n\n\n         \n          localStorage.setItem(\"data\", JSON.stringify(data))\n          console.log(\"data\", data);\n          // this.id = this.id + 1\n          this.router.navigate([\"/dashboard/\" + this.id]);\n          this.noteValue = \"\"\n          this.broadcast.publish({\n            name: 'getdata',\n          \n          });\n        }\n\n      }, 0)\n\n\n    });\n\n\n\n\n  }\n  ngOnDestroy() {\n    // this.broadcast.unsubscribeListener(this.broadcastListener);\n    this.emailBroadcastListner.unsubscribe();\n\n  }\n\n\n}\n","export { DashboardComponent } from './dashboard.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DLVMaterialModule } from 'dlv-material';\nimport { DashboardRoutesModule } from './dashboard.routes';\nimport { DashboardComponent } from './components';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms'; \n\nimport { SharedModule } from '../shared/shared.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    DashboardRoutesModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DLVMaterialModule\n  ],\n  declarations: [\n    DashboardComponent\n  ],\n  providers : [\n  ]\n})\nexport class DashboardModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// import { AuthGuardService } from '@app/core/services';\n\nimport { DashboardComponent } from './components';\n\n\nconst dashboardRoutesModule: Routes = [\n\n    {\n        path: ':id',\n        component: DashboardComponent,\n        data: { title: 'Dashboard' }\n    }\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(dashboardRoutesModule)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\n\nexport class DashboardRoutesModule {\n}\n"],"sourceRoot":""}