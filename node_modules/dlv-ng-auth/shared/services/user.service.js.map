{"version":3,"file":"user.service.js","sourceRoot":"","sources":["../../../tmp/src-inlined/shared/services/user.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { CookiesService } from './cookies.service';\nimport { AuthDetailsService } from './auth-details.service';\nimport { DlvHttpService } from './http.service';\n\n@Injectable()\nexport class UserService {\n    apiUrl = '';\n    userDetails: any;\n    jwtHelper: JwtHelperService = new JwtHelperService();\n    userData: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(\n        private cookies: CookiesService,\n        private authDetailService: AuthDetailsService,\n        private httpService: DlvHttpService\n    ) { }\n\n\n\n    public getUserFromJwt() {\n\n        if (this.authDetailService.getJWT()) {\n\n            return this.jwtHelper.decodeToken(this.authDetailService.getJWT());\n\n        } else {\n            return {};\n        }\n    }\n\n    public getUserFromServer() {\n        return this.getUserInfo(this.authDetailService.getJWT(), { emitData: true });\n    }\n\n    public hasAllCenterAccess(): Observable<object> {\n        const center: Object = {\n            read_all_facility: false,\n            write_all_facility: false\n        };\n\n        this.getUserInfo(this.authDetailService.getJWT(), { emitData: true })\n            .subscribe((res) => {\n                if (res) {\n                    if (res['user_data']['all_center_access']) {\n                        center['read_all_facility'] = true;\n                        center['write_all_facility'] = true;\n                    } else {\n                        center['read_all_facility'] = res['read_all_facility'] || false;\n                        center['write_all_facility'] = res['write_all_facility'] || false;\n                    }\n\n                    this.userData.emit(center);\n                } else {\n                    this.userData.emit({});\n                }\n\n            }, error => {\n                console.error(error);\n            });\n\n        return this.userData;\n    }\n\n    /**\n    * @name getUserInfo\n    * @scope private\n    *\n    * @description\n    * Decodes the returned JWT from a success API call and gets userdata to be stored in cookies\n    * and local scope for use.\n    */\n\n    public getUserInfo = function (jwt, options?) {\n        this.apiUrl = this.authDetailService.getApiURL();\n        const option = {\n            method: 'GET',\n            url: `${this.apiUrl}/users/self/`,\n            skipAuthorization: false\n        };\n\n        return this.httpService.httpRequest(option)\n            .pipe(\n                catchError(this.httpService.handleError),\n                map(this.httpService.responseData)\n            );\n    };\n\n\n    /**\n     * @name getUserRoles\n     * @scope private\n     *\n     * @description get user permission and roles for a particular app\n     * @param @appid\n     */\n\n    public getUserRoles = function (appid) {\n        this.apiUrl = this.authDetailService.getApiURL();\n        const option = {\n            method: 'GET',\n            url: `${this.apiUrl}/v2/applications/${appid}/${this.getUserFromJwt().sub}/permissions/`,\n            skipAuthorization: false,\n            Authorization: `Bearer ${this.authDetailService.getJWT()}`\n        };\n\n        return this.httpService.httpRequest(option)\n            .pipe(\n                catchError(this.httpService.handleError),\n                map(this.httpService.responseData)\n            );\n    };\n\n\n\n\n    /**\n     * @description change password api call\n     * @param newPassword\n     */\n    public changePassword(newPassword) {\n\n        this.apiUrl = this.authDetailService.getApiURL();\n        const option = {\n            url: `${this.apiUrl}/change_password/`,\n            method: 'PUT',\n            body: newPassword,\n            skipAuthorization: false\n        };\n\n        return this.httpService.httpRequest(option)\n            .pipe(\n                catchError(this.httpService.handleError),\n                map(this.httpService.responseData)\n            );\n    }\n\n    public setUserProfile(userDetails) {\n        this.userDetails = userDetails;\n    };\n\n\n    /** \n     * @name getBackgroundColor\n     * @description change password api call\n     * @param name: string\n     */\n    getBackgroundColor(name) {\n        let hash = 0;\n        for (let i = 0; i < name.length; i++) {\n        hash = name.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        let h = hash % 360;\n        return 'hsl('+h+', 60%, 40%)';\n\n    }\n}"]}