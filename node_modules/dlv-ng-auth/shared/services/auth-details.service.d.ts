import { EventEmitter } from '@angular/core';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import { CookiesService } from '../services/cookies.service';
export declare class AuthDetailsService {
    private cookies;
    private userDetails;
    private jwtHelper;
    private loginEmitter;
    private jwt;
    private callBackUrl;
    private isLoggedEmitter;
    private options;
    private baseTokenName;
    private apiConstant;
    private redirectLoginURLs;
    private userProfileSetEmitter;
    private changePasswordEmit;
    constructor(cookies: CookiesService);
    setAuthConstants(customOptions: any): void;
    getAuthConstants(): {
        loginMessage: string;
        needGoogleLogin: boolean;
        needPasswordLogin: boolean;
        interceptRequests: boolean;
        needOtpLogin: boolean;
        needForgotPasswordLogin: boolean;
        environment: string;
        onUnAuthorized: any;
        bodyParams: any;
    };
    setCookieName(): void;
    getApiURL(): any;
    getRedirectURL(): any;
    checkforErrors: () => void;
    private getSubDomainName;
    isAuthenticated(): boolean;
    private afterUserValidate;
    getJWT(): any;
    login(config: any): void;
    loginStatus(): EventEmitter<any>;
    deleteJWT(): void;
    setOn401(): void;
    getOn401(): EventEmitter<any>;
    setCallBackUrl(url?: any): void;
    getCallBackUrl(): string;
    call403(): void;
    call401(): void;
}
