import { EventEmitter } from '@angular/core';
import { JwtHelperService } from '@auth0/angular-jwt';
import { Observable } from 'rxjs';
import { CookiesService } from './cookies.service';
import { AuthDetailsService } from './auth-details.service';
import { DlvHttpService } from './http.service';
export declare class UserService {
    private cookies;
    private authDetailService;
    private httpService;
    apiUrl: string;
    userDetails: any;
    jwtHelper: JwtHelperService;
    userData: EventEmitter<any>;
    constructor(cookies: CookiesService, authDetailService: AuthDetailsService, httpService: DlvHttpService);
    getUserFromJwt(): any;
    getUserFromServer(): any;
    hasAllCenterAccess(): Observable<object>;
    /**
    * @name getUserInfo
    * @scope private
    *
    * @description
    * Decodes the returned JWT from a success API call and gets userdata to be stored in cookies
    * and local scope for use.
    */
    getUserInfo: (jwt: any, options?: any) => any;
    /**
     * @name getUserRoles
     * @scope private
     *
     * @description get user permission and roles for a particular app
     * @param @appid
     */
    getUserRoles: (appid: any) => any;
    /**
     * @description change password api call
     * @param newPassword
     */
    changePassword(newPassword: any): Observable<{}>;
    setUserProfile(userDetails: any): void;
    /**
     * @name getBackgroundColor
     * @description change password api call
     * @param name: string
     */
    getBackgroundColor(name: any): string;
}
