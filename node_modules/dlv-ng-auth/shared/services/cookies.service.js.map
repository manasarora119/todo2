{"version":3,"file":"cookies.service.js","sourceRoot":"","sources":["../../../tmp/src-inlined/shared/services/cookies.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookiesService {\n\n  // default values for this options;\n  private options = {\n    path: '',\n    domain: '',\n    secure: false,\n    expires: ''\n  };\n\n  constructor() {};\n\n  /**\n   * @name init\n   * @requires -\n   *\n   * @description\n   * Initial function to override the default cookie config.\n   *\n   * @param customOptions {object} object that overrides the default options.\n   */\n  init(customOptions) {\n    Object.assign(this.options, customOptions);\n  };\n\n  getAbsPath(sRelPath) {\n    let nUpLn, sDir = '';\n    const sPath = location.pathname.replace(/[^\\/]*$/, sRelPath.replace(/(\\/|^)(?:\\.?\\/+)+/g, '$1'));\n    for (\n      let nEnd, nStart = 0;\n      nEnd = sPath.indexOf('/v2/', nStart), nEnd > -1;\n      nStart = nEnd + nUpLn\n      ) {\n      nUpLn = /^\\/(?:\\.\\.\\/)*/.exec(sPath.slice(nEnd))[0].length;\n      sDir = (sDir + sPath.substring(nStart, nEnd)).replace(new RegExp('(?:\\\\\\/+[^\\\\\\/]*){0,' + ((nUpLn - 1) / 3) + '}$'), '/');\n    }\n    return sDir;\n  };\n\n  /**\n   * @name store\n   * @scope public\n   *\n   * @description\n   * stores the cookie with a provided expiry date.\n   *\n   * @param {string} name :  Cookie name\n   * @param {string} value : Cook Value\n   * @param {DateTime} : expiry : if not passed, one day is set as default.\n   */\n  store(name, value, expiry, domain) {\n    let expires = '';\n    let cookieValue = '';\n    if (expiry) {\n      expires = `expires=${expiry}`;\n    } else {\n      var d = new Date();\n      d.setTime(d.getTime() + (24 * 60 * 60 * 1000));\n      expires = `expires=${d.toUTCString()}`;\n    }\n\n    if (typeof value === \"object\") {\n      cookieValue = JSON.stringify(value);\n    } else {\n      cookieValue = value;\n    }\n\n    document.cookie = `${name}=${cookieValue};path=${this.getAbsPath('/')};domain=${domain};${expires};`;\n  };\n\n\n\n  /**\n   * @name get\n   * @scope public\n   *\n   * @description\n   * Get cookies value based on its name.if not found then returns null.\n   *\n   * @param {string} cookieName : Cookie name to search in cookies list.\n   */\n  get(cookieName) {\n\n    let name = `${cookieName}=`,\n        ca = document.cookie.split(';');\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1)\n      }\n      if (c.indexOf(name) === 0) {\n        let cookieValue = c.substring(name.length, c.length);\n\n        try {\n          if (JSON.parse(cookieValue)) {\n            return JSON.parse(cookieValue)\n          }\n        } catch (e) {\n          return cookieValue;\n        }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @name del\n   * @scope public\n   *\n   * @description\n   * Delete cookies value based on its name.\n   *\n   * @param {string} cookieName : Cookie name to search in cookies list\n   */\n  del(cookieName, domain) {\n    if (this.get(cookieName)) {\n      this.store(cookieName, '', new Date(-1), domain);\n    }\n  };\n}\n"]}