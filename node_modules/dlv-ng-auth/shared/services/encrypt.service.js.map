{"version":3,"file":"encrypt.service.js","sourceRoot":"","sources":["../../../tmp/src-inlined/shared/services/encrypt.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C;IAEE;IAAgB,CAAC;IAEjB;;;;;;;MAOE;IACF,+BAAM,GAAN,UAAO,GAAG;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,+BAAM,GAAN,UAAO,GAAG;QAEN,IAAI,GAAG,EAAE;YACL,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;aAAM;YACH,OAAO,EAAE,CAAC;SACb;IACL,CAAC;IAvBU,cAAc;QAD1B,UAAU,EAAE;;OACA,cAAc,CAyB1B;IAAD,qBAAC;CAAA,AAzBD,IAyBC;SAzBY,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EncryptService {\n\n  constructor() { }\n\n  /**\n     * @name encode\n     * @scope public\n     *\n     * @description\n     *\n     * @param {string} string : string to be encrypted.\n  */\n  encode(str) {\n      return btoa(JSON.stringify(str));\n  }\n  \n  decode(str) {\n\n      if (str) {\n          return JSON.parse(atob(str));\n      } else {\n          return '';\n      }\n  }\n\n}\n"]}