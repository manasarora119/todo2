var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter } from '@angular/core';
var ForbiddenComponent = /** @class */ (function () {
    function ForbiddenComponent() {
        this.onLogout = new EventEmitter();
        this.user = ' ';
        this.isChange = false;
    }
    ForbiddenComponent.prototype.ngOnInit = function () {
        // tslint:disable-next-line:max-line-length
        var defaultMsg = 'The page or resource you were trying to reach is restricted, please request application administrator for valid permissions.';
        if (!this.pageMessage) {
            this.pageMessage = defaultMsg;
        }
    };
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], ForbiddenComponent.prototype, "onLogout", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ForbiddenComponent.prototype, "pageMessage", void 0);
    ForbiddenComponent = __decorate([
        Component({
            template: "\n    <div class=\"forbidden text-center\">\n        <div class=\"status\">\n            <p class=\"forbidden-heading\">403</p>\n            <p class=\"heading-line\">Access Denied / Forbidden</p>\n            <p class=\"small\">{{pageMessage}}</p>\n        </div>\n    </div>\n  ",
            styles: ["\n    .forbidden{display:flex;justify-content:center;background-color:#fff;height:90vh}.forbidden .status{text-align:center;margin-top:15%}.forbidden .status p{font-family:OpenSans-Regular;margin:0;line-height:1.5em}.forbidden .status p.forbidden-heading{font-size:55px}.forbidden .status p.heading-line{font-size:30px}.forbidden .status p.small{font-size:14px}\n  "],
            selector: 'forbidden'
        }),
        __metadata("design:paramtypes", [])
    ], ForbiddenComponent);
    return ForbiddenComponent;
}());
export { ForbiddenComponent };
//# sourceMappingURL=forbidden.component.js.map