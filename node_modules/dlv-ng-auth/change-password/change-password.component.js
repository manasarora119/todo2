var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { FormGroup, FormControl, Validators } from '@angular/forms';
import { AuthService } from '../shared/services';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/observable/throw';
var ChangePasswordComponent = /** @class */ (function () {
    function ChangePasswordComponent(authService) {
        this.authService = authService;
        this.changePasswordEmitter = new EventEmitter();
        this.passwordRegex = /^[a-zA-Z0-9!@#~'$%^&*()_=+<>\/\\?{}|\-\[\].",:;\s]{8,15}$/;
    }
    ChangePasswordComponent.prototype.ngOnInit = function () {
        this.createFormControls();
        this.createForm();
    };
    ChangePasswordComponent.prototype.createFormControls = function () {
        this.old_password = new FormControl('', [
            Validators.required
        ]);
        this.new_password = new FormControl('', [
            Validators.pattern(/^[a-zA-Z0-9!@#~'$%^&*()_=+<>\/\\?{}|\-\[\].",:;\s]{8,15}$/),
            Validators.required
        ]);
        this.confirm = new FormControl('', [Validators.required]);
    };
    ChangePasswordComponent.prototype.createForm = function () {
        this.passwordForm = new FormGroup({
            old_password: this.old_password,
            new_password: this.new_password,
            confirm: this.confirm
        });
    };
    ChangePasswordComponent.prototype.updatePassword = function () {
        var _this = this;
        var data = this.passwordForm.value;
        delete data.confirm;
        this.authService.changePassword(data).subscribe(function (res) {
            _this.changePasswordEmitter.emit(false);
        }, function (error) { return _this.handleError(error); });
    };
    ChangePasswordComponent.prototype.closeUpdatePassword = function () {
        this.changePasswordEmitter.emit(false);
    };
    ChangePasswordComponent.prototype.handleError = function (error) {
        this.changePasswordEmitter.emit(true);
        return Observable.throw(error);
    };
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ChangePasswordComponent.prototype, "isChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], ChangePasswordComponent.prototype, "changePasswordEmitter", void 0);
    ChangePasswordComponent = __decorate([
        Component({
            template: "\n    <div class=\"changePasswordModal\">\n        <div class=\"modal-overlay\" (click)=\"closeUpdatePassword()\"></div>\n        <div class=\"modal-body\">\n            <span class=\"close-button\" (click)=\"closeUpdatePassword()\">\n                &times;\n            </span>\n            <div class=\"modal-header\">\n                <h3>Change Password</h3>\n            </div>\n            <form [formGroup]=\"passwordForm\" novalidate>\n                <div class=\"input-details\">\n                    <div class=\"input-wrapper\">\n                        <label for=\"current\" class=\"control-label\">Current Password<span class='required text-danger'>*</span></label>\n                        <div class=\"text\">\n                            <input type=\"password\" name=\"current\" formControlName=\"old_password\">\n\n                        </div>\n                    </div>\n                    <div class=\"input-wrapper\">\n                        <label for=\"newPass\" class=\"control-label\">New Password<span class='required text-danger'>*</span></label>\n                        <div class=\"text\">\n                            <input type=\"password\" name=\"newPass\" formControlName=\"new_password\" />\n                            <p class=\"validation-style\" *ngIf=\"new_password.errors && new_password.errors.pattern\"> Password length( 8-15 ) , Special Character (. > ! @ # $ % ^ & _ *).</p>\n                        </div>\n                    </div>\n                    <div class=\"input-wrapper\">\n                        <label for=\"confirm\" class=\"control-label\">Confirm Password<span class='required text-danger'>*</span></label>\n                        <div class=\"text\">\n                            <input type=\"password\" name=\"confirm\" formControlName=\"confirm\">\n                            <p class=\"validation-style\" *ngIf=\"confirm.value && (new_password.value !== confirm.value)\">Password don't match.</p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"button button-save\" (click)=\"updatePassword()\" [disabled]=\"passwordForm.invalid\">Save changes</button>\n                    <button class=\"button button-close\" (click)=\"closeUpdatePassword()\">Close</button>\n                </div>\n            </form>\n        </div>\n    </div>\n  ",
            styles: ["\n    .user-details-section{float:right;padding:0 25px;height:40px;position:relative;border-left:2px solid transparent;z-index:2}.user-details-section .display-text{height:calc(100% - 5px);margin-top:10px;color:#515356;line-height:20px}.user-details-section .display-text .user-icon{font-size:1.7em;margin-right:5px}.user-details-section .display-text .angle-down{margin:0 5px;font-size:0.7em;position:relative;top:-5px}.user-details-section .display-text .user-name{position:relative;top:-5px}.user-details-section .sub-menu{display:none;position:absolute;left:-2px;top:40px;width:100%;border:1px solid #D9DEE4;background:#fff;line-height:15px}.user-details-section .sub-menu ul{margin:0;padding:0}.user-details-section .sub-menu li{list-style-type:none;font-size:14px;color:#5A738E;padding:10px}.user-details-section .sub-menu li:hover{color:#262626;background-color:#f5f5f5}.user-details-section:hover{background:#D9DEE4;color:black;cursor:pointer}.user-details-section:hover .sub-menu{display:block}.user-details-section.invert .display-text{color:#ffffff}.user-details-section.invert:hover{background:#3e485f}.changePasswordModal{position:fixed;top:0;left:0;width:100%;height:100%;z-index:100}.changePasswordModal .modal-overlay{position:absolute;top:0;left:0;background:rgba(0,0,0,0.6);width:100%;height:100%}.changePasswordModal .modal-body{position:relative;background:#fff;margin-top:10%;margin-left:30%;width:40vw;z-index:99}.changePasswordModal .modal-body .modal-header{text-align:center;padding-top:5px;color:#515356}.changePasswordModal .modal-body .close-button{position:absolute;position:absolute;right:10px;top:10px;width:20px;cursor:pointer}.changePasswordModal .modal-body .close-button img{max-width:100%}.changePasswordModal .modal-body .input-details .input-wrapper{text-align:center;padding:5px 20px}.changePasswordModal .modal-body .input-details .input-wrapper label{float:left;width:40%;line-height:2.1}.changePasswordModal .modal-body .input-details .input-wrapper .text{margin-left:10px}.changePasswordModal .modal-body .input-details .input-wrapper .text input{margin-left:10px;border:1px solid #C2C2C2;border-radius:1px;font-size:12px;color:#414042;background:#ffffff;padding:0 7px;width:50%;height:40px}.changePasswordModal .modal-body .modal-footer{padding:10px;text-align:center}.changePasswordModal .modal-body .modal-footer .button{border:medium none;font-size:12px;font-family:opensans-semibold;height:30px;padding:0px 30px;border-radius:2px;margin-bottom:6px;line-height:1.9;min-width:120px;transition:all 0.3s;cursor:pointer;font-size:16px}.changePasswordModal .modal-body .modal-footer .button.button-save{background:#217589;color:#FFFFFF}.changePasswordModal .modal-body .modal-footer .button.button-close{background:#EF3D26;color:#FFFFFF}.changePasswordModal .modal-body .modal-footer .button:hover{box-shadow:0px 3px 6px rgba(0,0,0,0.34);border:none}p.validation-style{color:#ff0000;font-size:12px;text-align:right}\n  "],
            selector: 'change-password'
        }),
        __metadata("design:paramtypes", [AuthService])
    ], ChangePasswordComponent);
    return ChangePasswordComponent;
}());
export { ChangePasswordComponent };
//# sourceMappingURL=change-password.component.js.map