/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, } from '@angular/core';
var MatLabel = /** @class */ (function () {
    function MatLabel() {
    }
    /**
     * @return {?}
     */
    MatLabel.prototype.closeHandler = /**
     * @return {?}
     */
    function () { };
    MatLabel.decorators = [
        { type: Component, args: [{
                    selector: 'mat-label',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: "\n  <span [class]=\"'label label-' + type \">{{label}} \n  </span>",
                    styles: [".label{margin-left:5px}.label-success{background-color:#0fb687}.label-info{background-color:#3aafd1}.label-warning{background-color:#f2b50e}.label-danger{background-color:#fa5c7c}.label-success-light{background-color:#fff;border:1px solid #0fb687;color:#0fb687;padding:2px 8px}.label-warning-light{background-color:#fff;border:1px solid #f2b50e;color:#f2b50e;padding:2px 8px}.label-info-light{background-color:#fff;border:1px solid #3aafd1;color:#3aafd1;padding:2px 8px}.label-danger-light{background-color:#fff;border:1px solid #fa5c7c;color:#fa5c7c;padding:2px 8px}"]
                }] }
    ];
    /** @nocollapse */
    MatLabel.ctorParameters = function () { return []; };
    MatLabel.propDecorators = {
        type: [{ type: Input }],
        label: [{ type: Input }]
    };
    return MatLabel;
}());
export { MatLabel };
if (false) {
    /** @type {?} */
    MatLabel.prototype.type;
    /** @type {?} */
    MatLabel.prototype.label;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9kbHYtbWF0ZXJpYWwvIiwic291cmNlcyI6WyJsaWIvbGFiZWwvbGFiZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUdMLHVCQUF1QixHQUN4QixNQUFNLGVBQWUsQ0FBQztBQUN2QjtJQWFFO0lBQ0EsQ0FBQzs7OztJQUVELCtCQUFZOzs7SUFBWixjQUFrQixDQUFDOztnQkFoQnBCLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsV0FBVztvQkFDckIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFFBQVEsRUFBRSxvRUFFRjs7aUJBR1Q7Ozs7O3VCQUdFLEtBQUs7d0JBQ0wsS0FBSzs7SUFLUixlQUFDO0NBQUEsQUFqQkQsSUFpQkM7U0FSWSxRQUFROzs7SUFFbkIsd0JBQXNCOztJQUN0Qix5QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWF0LWxhYmVsJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlOiBgXG4gIDxzcGFuIFtjbGFzc109XCInbGFiZWwgbGFiZWwtJyArIHR5cGUgXCI+e3tsYWJlbH19IFxuICA8L3NwYW4+YFxuICAsXG4gIHN0eWxlVXJsczogWycuL19sYWJlbC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTWF0TGFiZWwge1xuXG4gIEBJbnB1dCgpIHR5cGU6IHN0cmluZztcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cblxuICBjbG9zZUhhbmRsZXIoKSB7ICB9XG59XG4iXX0=