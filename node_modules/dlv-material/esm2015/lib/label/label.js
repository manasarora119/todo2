/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, } from '@angular/core';
export class MatLabel {
    constructor() {
    }
    /**
     * @return {?}
     */
    closeHandler() { }
}
MatLabel.decorators = [
    { type: Component, args: [{
                selector: 'mat-label',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: `
  <span [class]="'label label-' + type ">{{label}} 
  </span>`,
                styles: [".label{margin-left:5px}.label-success{background-color:#0fb687}.label-info{background-color:#3aafd1}.label-warning{background-color:#f2b50e}.label-danger{background-color:#fa5c7c}.label-success-light{background-color:#fff;border:1px solid #0fb687;color:#0fb687;padding:2px 8px}.label-warning-light{background-color:#fff;border:1px solid #f2b50e;color:#f2b50e;padding:2px 8px}.label-info-light{background-color:#fff;border:1px solid #3aafd1;color:#3aafd1;padding:2px 8px}.label-danger-light{background-color:#fff;border:1px solid #fa5c7c;color:#fa5c7c;padding:2px 8px}"]
            }] }
];
/** @nocollapse */
MatLabel.ctorParameters = () => [];
MatLabel.propDecorators = {
    type: [{ type: Input }],
    label: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MatLabel.prototype.type;
    /** @type {?} */
    MatLabel.prototype.label;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9kbHYtbWF0ZXJpYWwvIiwic291cmNlcyI6WyJsaWIvbGFiZWwvbGFiZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUdMLHVCQUF1QixHQUN4QixNQUFNLGVBQWUsQ0FBQztBQVV2QixNQUFNLE9BQU8sUUFBUTtJQUluQjtJQUNBLENBQUM7Ozs7SUFFRCxZQUFZLEtBQU0sQ0FBQzs7O1lBaEJwQixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxRQUFRLEVBQUU7O1VBRUY7O2FBR1Q7Ozs7O21CQUdFLEtBQUs7b0JBQ0wsS0FBSzs7OztJQUROLHdCQUFzQjs7SUFDdEIseUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXIsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21hdC1sYWJlbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICB0ZW1wbGF0ZTogYFxuICA8c3BhbiBbY2xhc3NdPVwiJ2xhYmVsIGxhYmVsLScgKyB0eXBlIFwiPnt7bGFiZWx9fSBcbiAgPC9zcGFuPmBcbiAgLFxuICBzdHlsZVVybHM6IFsnLi9fbGFiZWwuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIE1hdExhYmVsIHtcblxuICBASW5wdXQoKSB0eXBlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgY2xvc2VIYW5kbGVyKCkgeyAgfVxufVxuIl19