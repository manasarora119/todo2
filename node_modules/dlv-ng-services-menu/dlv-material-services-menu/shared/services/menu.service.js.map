{"version":3,"file":"menu.service.js","sourceRoot":"","sources":["../../../../tmp/src-inlined/dlv-material-services-menu/shared/services/menu.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Constant } from './constant';\n\n@Injectable()\n\n// It is working as a provider in angular2\nexport class MatMenuService {\n    private options = {\n        environment: '', // ask to add\n        facilityFilters: ['TRA'],\n        showCloseCenterModalBtn: true,\n        centerStatus: '',\n        showServices: true,\n        showWaybill: true,\n        showCenter: true,\n        showNotifications: true\n    };\n\n\n    private UmsApi = Constant().UMS_API;\n    private HqApi = Constant().HQ_API;\n    private FaasApi = Constant().FAAS_API;\n    private linkAddress = Constant().LINK_ADDRESS;\n    private ConfigApi = Constant().CONFIG_API;\n    private isActiveStaff = false;\n    private performanceLink = Constant().PERFORMANCE_API;\n\n\n    constructor() {\n    }\n    // This is the initializing function which is mapping the environment basis on ums, hq and faas api\n    public init(customOptions) {\n        Object.assign(this.options, customOptions);\n        Object.assign(this.UmsApi, customOptions.env);\n        Object.assign(this.HqApi, customOptions.env);\n        Object.assign(this.FaasApi, customOptions.env);\n        Object.assign(this.performanceLink, customOptions.env);\n    };\n\n    /**\n     * @name getOptions\n     * @description This method called first when service menu loads in service menu component and it return environment as per all apis\n     * @returns It returns environment type to user\n     */\n    public getOptions() {\n        return this.options\n    };\n\n    /**\n     * @name getApiUrl\n     * @description This method provides url based on api environment wheather it is ums ,hq or faas\n     * @param type : It is containing type of api call\n     */\n    public getApiUrl(type) {\n        // Here we checking if type is ums then it return ums environment\n        if (type === 'ums') {\n            return this.UmsApi[this.options['environment']];\n        }\n\n        // Here we checking if type is Hq then it return hq environment\n        if (type === 'hq') {\n            return this.HqApi[this.options['environment']];\n        }\n\n        // Here we checking if type is faas then it return faas environment\n        if (type === 'faas') {\n            return this.FaasApi[this.options['environment']];\n        }\n\n        // Here we checking if type is faas then it return faas environment\n        if (type === 'performance') {\n            return this.performanceLink[this.options['environment']];\n        }\n    }\n\n    /**\n     * @name getUrlLink\n     * @description This method used to get particular url based on api call environment\n     */\n    public getUrlLink() {\n        return this.linkAddress;\n    }\n\n    /**\n     * @name setActiveStaff\n     * @description This method sets the is_staff logged in user's staff status\n     */\n    public setActiveStaff() {\n        this.isActiveStaff = true;\n    }\n\n    /**\n     * @name getActiveStaff\n     * @description This method is getting is_staff status of logged in user\n     */\n    public getActiveStaff() {\n        return this.isActiveStaff;\n    }\n\n    /**\n     * @name getConfigUrl\n     * @description This method is used to get config url and it's environemnt when user initially log in\n     * @returns It returns url with environment\n     */\n    public getConfigUrl() {\n        return this.ConfigApi[this.options['environment']];\n    }\n}\n"]}