var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
var DlvMatErrorComponent = /** @class */ (function () {
    function DlvMatErrorComponent() {
    }
    DlvMatErrorComponent.prototype.ngOnInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.errorMsg.splice(0, _this.errorMsg.length);
        }, 3000);
    };
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], DlvMatErrorComponent.prototype, "errorMsg", void 0);
    DlvMatErrorComponent = __decorate([
        Component({
            selector: 'dlv-mat-error-alert',
            template: "\n    <ul class=\"floating-error\" [ngClass]=\"{'hidden': !errorMsg, 'active' : errorMsg}\">\n        <li *ngFor=\"let error of errorMsg\">{{error}}</li>\n    </ul>\n  ",
            styles: ["\n    .hidden{display:none !important}.floating-error.hidden{animation:slideUp .5s ease-in}.floating-error.active{animation:slideDown 0.5s forwards}.floating-error{position:fixed;top:-1000px;min-width:120px;left:calc(50% - 10%);background:#bd362f;color:#fff;padding:10px 30px;z-index:999999}.floating-error p{margin:0}@keyframes slideDown{100%{top:10px}}@keyframes slideUp{0%{top:10px}100%{top:-1000px}}\n  "]
        }),
        __metadata("design:paramtypes", [])
    ], DlvMatErrorComponent);
    return DlvMatErrorComponent;
}());
export { DlvMatErrorComponent };
//# sourceMappingURL=error-alert.component.js.map