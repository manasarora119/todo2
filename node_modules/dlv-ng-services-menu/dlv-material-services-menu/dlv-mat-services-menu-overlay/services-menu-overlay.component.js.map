{"version":3,"file":"services-menu-overlay.component.js","sourceRoot":"","sources":["../../../tmp/src-inlined/dlv-material-services-menu/dlv-mat-services-menu-overlay/services-menu-overlay.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, OnInit, DoCheck, ViewChild, EventEmitter } from '@angular/core';\nimport { PermissionService, MatMenuService, FilterByGroup, CookiesService, MatCenterService} from '../shared/services';\nimport { Observable } from 'rxjs/Observable';\n\nimport { overlayInterface } from './overlayConfiguration.interface'\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/throw';\n\n@Component({\n  selector: 'dlv-mat-services-menu-overlay',\n  template: `\n    <div class=\"services-overlay\" [ngClass]=\"{'open': open}\" *ngIf=\"serviceMenu\">\n      <ul *ngIf=\"navLink.length\">\n        <li class=\"nav-list\" *ngFor=\"let nav of navLink\">\n        </li>\n      </ul>\n      <div class=\"service-overlay-content\" *ngIf=\"!serviceMenu.display\">\n        <p>No Services Menu</p>\n      </div>\n      <div *ngIf=\"serviceMenu.display\" class=\"service-overlay-content\">\n\n        <div class=\"service-container\">\n          <div class=\"frequent-services\" *ngIf=\"recentUsedService.length\">\n            <h3 class=\"frequent-header\">Recently Used</h3>\n            <div class=\"recent-activity\">\n              <a [href]=\"menu.page_url\" target=\"_blank\" class=\"frequent-list-items\" *ngFor=\"let menu of recentUsedService\">\n                <span class=\"sub-menu-item\">\n                  {{menu.alias || menu.title}}\n                </span>\n              </a>\n            </div>\n          </div>\n          <div class=\"menu-list\">\n            <div class=\"search-services\">\n              <div class=\"form-search desktop\">\n                <input type=\"text\" [(ngModel)]=\"searchService\" placeholder=\"Search Services\" class=\"search-input\" />\n                <span class=\"fa fa-search\"></span>\n              </div>\n              <div class=\"form-search mobile\">\n                <i class=\"material-icons search-icon\">search</i>\n                <input type=\"text\" [(ngModel)]=\"searchService\" placeholder=\"Search Services\" class=\"search-input-mobile\" />\n              </div>\n            </div>\n            <div class=\"menu-services\" DynamicHeight>\n              <div class=\"menu-service-group\" *ngFor=\"let obj of serviceMenu.service, let i=index\">\n                <p *ngIf=\"(obj.submenu | filterByGroup : {'title' : searchService} : false).length\"\n                  class=\"service-title semi-bold\" [hidden]=\"!obj.display\">{{obj.grouptitle}}</p>\n                <a [href]=\"menu.page_url\" target=\"_blank\"\n                  *ngFor=\"let menu of (obj.submenu | filterByGroup : {'title' : searchService} : false)\"\n                  [hidden]=\"!menu.display\" (click)=\"recentUsed(menu)\">\n                  <span class=\"sub-menu-item\">\n                    {{menu.title}}\n                  </span>\n                </a>\n              </div>\n\n              <!-- sochna -->\n              <div *ngIf=\"mobileListArr\" DynamicHeight>\n                <div class=\"menu-services-mob-group\" *ngFor=\"let obj of mobileListArr, let i=index\">\n                  <p *ngIf=\"(obj.submenu | filterByGroup : {'title' : searchService} : false).length\"\n                    class=\"service-title semi-bold\" [hidden]=\"!obj.display\">{{obj.grouptitle}}</p>\n                  <a [href]=\"menu.page_url\" target=\"_blank\"\n                    *ngFor=\"let menu of (obj.submenu | filterByGroup : {'title' : searchService} : false)\"\n                    [hidden]=\"!menu.display\" (click)=\"recentUsed(menu)\">\n                    <span class=\"sub-menu-item\">\n                      {{menu.title}}\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .services-overlay{height:0;width:100%;position:fixed;z-index:1;left:0;top:0;overflow-y:hidden}.services-overlay.open{height:calc(100% - 80px);width:98%;top:65px;overflow-y:auto;background:white;margin:0 1%;border-top:none;box-shadow:2px 2px 4px 2px rgba(0,0,0,0.1)}.services-overlay ul{margin:0;padding:0}.services-overlay ul .nav-list{list-style:none;float:left;margin-left:30px}.services-overlay ul .nav-list a{font-family:OpenSans-SemiBold;text-decoration:underline;color:#F0503C;font-size:13px}.services-overlay ul .nav-list a:hover{opacity:1}.services-overlay ul .nav-list a.performance{text-decoration:none !important}.services-overlay ul .nav-list a .left-arrow{font-size:19px;line-height:12px;font-weight:bold}.services-overlay ul .nav-list a span{text-decoration:underline}.services-overlay .loading-text{font-size:20px}.services-overlay .service-overlay-content{position:relative;margin:30px}.services-overlay .service-overlay-content p{color:#666;font-family:Opensans-Semibold;font-size:14px}.services-overlay .service-overlay-content .service-container{display:flex}.services-overlay .service-overlay-content .service-container .frequent-services{flex:1 1 15%;border-right:2px solid #afaaaa;padding-right:15px}.services-overlay .service-overlay-content .service-container .frequent-services .frequent-list-items{text-align:left}.services-overlay .service-overlay-content .service-container .frequent-services .frequent-header{text-align:left}.services-overlay .service-overlay-content .service-container .menu-list{flex:1 1 85%}.services-overlay .service-overlay-content .service-container .menu-list .search-services{margin:20px 40px}.services-overlay .service-overlay-content .service-container .menu-list .search-services .desktop{display:block}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile{display:none}.services-overlay .service-overlay-content .service-container .menu-list .search-services .form-search{position:relative}.services-overlay .service-overlay-content .service-container .menu-list .search-services .form-search span{position:absolute;right:8px;top:8px;color:#808080;font-size:14px}.services-overlay .service-overlay-content .service-container .menu-list .search-services .search-input{width:calc(100% - 10px);padding:3px 5px;border:none;box-shadow:none !important;border-radius:0;border-bottom:1px solid #a6a6a6;font-size:14px;line-height:21px;color:#414042;margin-bottom:10px;background:transparent}.services-overlay .service-overlay-content .service-container .menu-list .search-services .search-input:focus{border-color:red;outline:none;box-shadow:none}.services-overlay .service-overlay-content .service-container .menu-list .menu-services{display:flex;flex-flow:column wrap;min-height:450px;width:calc(100% - 80px);align-content:flex-start;padding-left:40px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group,.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-services-mob-group{width:20%;text-align:left;margin-right:40px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group .service-title,.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-services-mob-group .service-title{text-transform:capitalize;font-weight:300;color:#F0503C;font-size:16px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group .no-result,.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-services-mob-group .no-result{position:absolute;width:calc(100% - 275px);text-align:center}.services-overlay a{display:inherit;margin:5px}.services-overlay a .sub-menu-item{font-size:14px;color:#323232}.services-overlay a .sub-menu-item:hover{color:#e47911}.services-overlay .close-btn{position:absolute;right:5px;top:5px;cursor:pointer}.services-overlay .close-btn:hover{color:#F0503C;transition:.2s linear}.no-services{color:black}.service-menu-wrap{width:auto;display:block}[hidden]{display:none !important}@media screen and (max-width: 768px){.services-overlay{width:100% !important;margin:0 !important}.services-overlay .close-btn{display:none;position:absolute;right:5px;top:5px;cursor:pointer;z-index:9999}.services-overlay .close-btn:hover{color:#F0503C;transition:.2s linear}.services-overlay.open{top:57px}.services-overlay .service-overlay-content{margin:0;padding:10px 10px 20px 10px}.services-overlay .service-overlay-content .service-container{display:block;padding:0}.services-overlay .service-overlay-content .service-container .frequent-services{border-right:none;padding-right:15px;text-align:left;padding-bottom:10px;margin:0 0 10px 0;border-bottom:1px dashed #ccc;display:none}.services-overlay .service-overlay-content .service-container .menu-list{padding:0;margin:0}.services-overlay .service-overlay-content .service-container .menu-list .search-services{margin:0px 0px 20px 0}.services-overlay .service-overlay-content .service-container .menu-list .search-services .desktop{display:none}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile{display:block}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile i.search-icon{position:absolute;left:5px;top:8px;cursor:pointer;color:#b8b5b5;font-size:22px;display:inline}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile .search-input-mobile{width:calc(100% - 43px);padding:8px 8px 8px 30px;background:#eee;border:1px solid transparent;border-radius:5px;font-size:13px;line-height:21px}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile .search-input-mobile:focus{outline:none}.services-overlay .service-overlay-content .service-container .menu-list .menu-services{flex-flow:row wrap;margin:20px 0;padding:0}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group{width:100%;margin-right:0;display:none}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-services-mob-group{display:block;width:100%;margin-bottom:15px}}\n  `]\n})\nexport class DlvMatServicesMenuOverlayComponent implements OnInit, DoCheck {\n  @Input () profile : object;\n  @Input () open : boolean;\n  @Output () onError : EventEmitter<any> = new EventEmitter<any>();\n  @Output () onCloseModal: EventEmitter<boolean> = new EventEmitter<any>()\n  \n\n// Only mentioned below menus need to show on mobile\n  mobileMenuList = {\n    fm: 'First Mile',\n    lm: 'Last Mile',\n    db: 'Dashboards'\n  }\n\n  private umsPermission : Array<any> = [];\n  private HQPermission : Array<any> = [];\n  private allPermission : Array<any>;\n  private isUms : boolean = false;\n  private isHq : boolean = false;\n  public serviceMenu : overlayInterface;\n  private filter = new FilterByGroup();\n  private errMsg : string;\n  private urlLink : string;\n  public homeUrlLink : string;\n  private superUser : boolean = false;\n  private navLink : Array<any> = [];\n  \n  private getRecent;\n  private recentUsedService;\n  private env : string;\n  private mobileListArr = []\n  public mobMenuHide = false;\n\n  constructor(private menuService : MatMenuService, private centerService: MatCenterService, private cookies : CookiesService, private permission : PermissionService) {\n    this.env = this.menuService.getOptions()['environment'];\n    this.getRecent = this.cookies.get(`${this.env}_service_name`) ? this.cookies.get(`${this.env}_service_name`).split(',') : [];\n\n    this.urlLink = this.menuService.getUrlLink()[this.env];\n    this.homeUrlLink = `${this.urlLink}p/center/`;\n  }\n\n  ngOnInit() {\n    this.getServicesMenu();    \n  }\n\n\n  ngDoCheck(){\n\n    if(this.isUms && this.isHq){\n      \n      this.allPermission = this.permission.mergePermission(this.umsPermission,this.permission.getHqPermArray());\n      this.serviceMenu = this.permission.updatedPermission(this.allPermission);\n      this.recentUsedService = this.permission.recentServiceFilter(this.serviceMenu, this.getRecent);     \n      this.mobileListArr = this.serviceMenu.service;\n      this.mobMenuHide = true;\n    } else if(this.superUser && this.isUms){\n\n      this.serviceMenu = this.permission.updatedPermission();\n      this.recentUsedService = this.permission.recentServiceFilter(this.serviceMenu, this.getRecent); \n      // console.log('this. permission', this.serviceMenu.service);\n      this.updateMobileList(this.serviceMenu.service);\n      this.mobMenuHide = false\n    }\n\n  }\n\n  updateMobileList(serviceList) {\n    if(serviceList) {\n      serviceList.forEach(li => {\n          if(li.grouptitle === this.mobileMenuList.fm) {\n            this.mobileListArr[0] = li;\n          }else if(li.grouptitle === this.mobileMenuList.lm) {\n            this.mobileListArr[1] = li;\n          }else if(li.grouptitle === this.mobileMenuList.db) {\n            this.mobileListArr[2] = li;\n          }\n      });\n    }\n    \n  }\n\n  /**\n   * @name getServicesMenu\n   * @description This method is using to set menu service as per user's permissions which are based on ums and hq\n   */\n  private getServicesMenu(){\n    this.permission.getServicesMenu()\n      .subscribe(res => {\n        this.permission.setServiceName(res['data']);\n        \n        //Call Function for HQ permissions\n      \n        this.getHQ();\n        \n        //Call Function for UMS permissions\n     \n        this.getUms();\n\n      }, error =>{\n        this.onError.emit('Not able to Build Services Menu.');\n      })\n      return this.onError; \n  }\n  \n\n  /**\n   * @name getUms\n   * @description This method is using to get all permission assigned to logged in user.\n   */\n  private getUms(){\n    this.permission.getUMSPermissions(this.profile['uuid'])\n      .subscribe(res => {\n            if(res && res['permissions']){\n                let perm = res['permissions'];\n                for(let i=0 ; i < perm.length ; i++){\n                    this.umsPermission.push(perm[i].name)\n                }\n                this.isUms = true;\n                this.navLink = this.permission.hasPerformancePerm(this.urlLink,this.umsPermission);\n            }\n        }, error => {\n          this.isUms = true;\n          this.navLink = this.permission.hasPerformancePerm(this.urlLink,this.umsPermission);\n      \n          // this.onError.emit('Not able to fetch Permission from UMS.');\n        })\n        return this.onError; \n  }\n\n\n  /**\n   * @name getHQ\n   * @description This method is using to get all permission assigned to logged in user in hq.\n   */\n  private getHQ(){\n    this.permission.getHQPermission()\n      .subscribe(res => {\n          if(res && res['superuser']){\n            this.superUser = true;\n           \n          } else if(res && res['perms']){\n            \n            this.permission.createPermissionHq(res);  \n            this.isHq = true;       \n          \n          }\n        }, error =>{\n          \n          this.onError.emit('Not able to fetch Permission from HQ.'); \n          this.isHq = true;       \n        })\n\n        return this.onError; \n    }\n\n  /**\n   * @name recentUsed\n   * @description this function is arranging the recent services on the basis of latest click and storing it to cookie\n   * @param obj \n   * \n   */\n  private recentUsed(obj){\n    let selectedServiceIndex = this.getRecent.indexOf(obj.title);\n\t\tif(selectedServiceIndex === -1 || selectedServiceIndex === null){\n      if(this.getRecent.length < 10){\n        this.getRecent.push(obj.title)\n\t\t\t\tthis.getRecent.reverse();\n\t\t\t} else {\t\n\t\t\t\tthis.getRecent.splice(9,1);\n\t\t\t\tthis.getRecent.splice(0,0,obj.title);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.getRecent.splice(selectedServiceIndex,1);\n\t\t\tthis.getRecent.splice(0,0,obj.title);\n\t\t}\n\n    this.cookies.store(`${this.env}_service_name`,this.getRecent.join(','),'',this.centerService.getSubDomainName());\n\t}\n\n  // close icon button\n  private onClose(val) {\n    this.onCloseModal.emit(val);\n  }\n}\n"]}