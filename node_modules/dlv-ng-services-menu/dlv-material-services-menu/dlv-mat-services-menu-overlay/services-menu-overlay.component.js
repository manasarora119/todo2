var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { PermissionService, MatMenuService, FilterByGroup, CookiesService, MatCenterService } from '../shared/services';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/observable/throw';
var DlvMatServicesMenuOverlayComponent = /** @class */ (function () {
    function DlvMatServicesMenuOverlayComponent(menuService, centerService, cookies, permission) {
        this.menuService = menuService;
        this.centerService = centerService;
        this.cookies = cookies;
        this.permission = permission;
        this.onError = new EventEmitter();
        this.onCloseModal = new EventEmitter();
        // Only mentioned below menus need to show on mobile
        this.mobileMenuList = {
            fm: 'First Mile',
            lm: 'Last Mile',
            db: 'Dashboards'
        };
        this.umsPermission = [];
        this.HQPermission = [];
        this.isUms = false;
        this.isHq = false;
        this.filter = new FilterByGroup();
        this.superUser = false;
        this.navLink = [];
        this.mobileListArr = [];
        this.mobMenuHide = false;
        this.env = this.menuService.getOptions()['environment'];
        this.getRecent = this.cookies.get(this.env + "_service_name") ? this.cookies.get(this.env + "_service_name").split(',') : [];
        this.urlLink = this.menuService.getUrlLink()[this.env];
        this.homeUrlLink = this.urlLink + "p/center/";
    }
    DlvMatServicesMenuOverlayComponent.prototype.ngOnInit = function () {
        this.getServicesMenu();
    };
    DlvMatServicesMenuOverlayComponent.prototype.ngDoCheck = function () {
        if (this.isUms && this.isHq) {
            this.allPermission = this.permission.mergePermission(this.umsPermission, this.permission.getHqPermArray());
            this.serviceMenu = this.permission.updatedPermission(this.allPermission);
            this.recentUsedService = this.permission.recentServiceFilter(this.serviceMenu, this.getRecent);
            this.mobileListArr = this.serviceMenu.service;
            this.mobMenuHide = true;
        }
        else if (this.superUser && this.isUms) {
            this.serviceMenu = this.permission.updatedPermission();
            this.recentUsedService = this.permission.recentServiceFilter(this.serviceMenu, this.getRecent);
            // console.log('this. permission', this.serviceMenu.service);
            this.updateMobileList(this.serviceMenu.service);
            this.mobMenuHide = false;
        }
    };
    DlvMatServicesMenuOverlayComponent.prototype.updateMobileList = function (serviceList) {
        var _this = this;
        if (serviceList) {
            serviceList.forEach(function (li) {
                if (li.grouptitle === _this.mobileMenuList.fm) {
                    _this.mobileListArr[0] = li;
                }
                else if (li.grouptitle === _this.mobileMenuList.lm) {
                    _this.mobileListArr[1] = li;
                }
                else if (li.grouptitle === _this.mobileMenuList.db) {
                    _this.mobileListArr[2] = li;
                }
            });
        }
    };
    /**
     * @name getServicesMenu
     * @description This method is using to set menu service as per user's permissions which are based on ums and hq
     */
    DlvMatServicesMenuOverlayComponent.prototype.getServicesMenu = function () {
        var _this = this;
        this.permission.getServicesMenu()
            .subscribe(function (res) {
            _this.permission.setServiceName(res['data']);
            //Call Function for HQ permissions
            _this.getHQ();
            //Call Function for UMS permissions
            _this.getUms();
        }, function (error) {
            _this.onError.emit('Not able to Build Services Menu.');
        });
        return this.onError;
    };
    /**
     * @name getUms
     * @description This method is using to get all permission assigned to logged in user.
     */
    DlvMatServicesMenuOverlayComponent.prototype.getUms = function () {
        var _this = this;
        this.permission.getUMSPermissions(this.profile['uuid'])
            .subscribe(function (res) {
            if (res && res['permissions']) {
                var perm = res['permissions'];
                for (var i = 0; i < perm.length; i++) {
                    _this.umsPermission.push(perm[i].name);
                }
                _this.isUms = true;
                _this.navLink = _this.permission.hasPerformancePerm(_this.urlLink, _this.umsPermission);
            }
        }, function (error) {
            _this.isUms = true;
            _this.navLink = _this.permission.hasPerformancePerm(_this.urlLink, _this.umsPermission);
            // this.onError.emit('Not able to fetch Permission from UMS.');
        });
        return this.onError;
    };
    /**
     * @name getHQ
     * @description This method is using to get all permission assigned to logged in user in hq.
     */
    DlvMatServicesMenuOverlayComponent.prototype.getHQ = function () {
        var _this = this;
        this.permission.getHQPermission()
            .subscribe(function (res) {
            if (res && res['superuser']) {
                _this.superUser = true;
            }
            else if (res && res['perms']) {
                _this.permission.createPermissionHq(res);
                _this.isHq = true;
            }
        }, function (error) {
            _this.onError.emit('Not able to fetch Permission from HQ.');
            _this.isHq = true;
        });
        return this.onError;
    };
    /**
     * @name recentUsed
     * @description this function is arranging the recent services on the basis of latest click and storing it to cookie
     * @param obj
     *
     */
    DlvMatServicesMenuOverlayComponent.prototype.recentUsed = function (obj) {
        var selectedServiceIndex = this.getRecent.indexOf(obj.title);
        if (selectedServiceIndex === -1 || selectedServiceIndex === null) {
            if (this.getRecent.length < 10) {
                this.getRecent.push(obj.title);
                this.getRecent.reverse();
            }
            else {
                this.getRecent.splice(9, 1);
                this.getRecent.splice(0, 0, obj.title);
            }
        }
        else {
            this.getRecent.splice(selectedServiceIndex, 1);
            this.getRecent.splice(0, 0, obj.title);
        }
        this.cookies.store(this.env + "_service_name", this.getRecent.join(','), '', this.centerService.getSubDomainName());
    };
    // close icon button
    DlvMatServicesMenuOverlayComponent.prototype.onClose = function (val) {
        this.onCloseModal.emit(val);
    };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], DlvMatServicesMenuOverlayComponent.prototype, "profile", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DlvMatServicesMenuOverlayComponent.prototype, "open", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DlvMatServicesMenuOverlayComponent.prototype, "onError", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DlvMatServicesMenuOverlayComponent.prototype, "onCloseModal", void 0);
    DlvMatServicesMenuOverlayComponent = __decorate([
        Component({
            selector: 'dlv-mat-services-menu-overlay',
            template: "\n    <div class=\"services-overlay\" [ngClass]=\"{'open': open}\" *ngIf=\"serviceMenu\">\n      <ul *ngIf=\"navLink.length\">\n        <li class=\"nav-list\" *ngFor=\"let nav of navLink\">\n        </li>\n      </ul>\n      <div class=\"service-overlay-content\" *ngIf=\"!serviceMenu.display\">\n        <p>No Services Menu</p>\n      </div>\n      <div *ngIf=\"serviceMenu.display\" class=\"service-overlay-content\">\n\n        <div class=\"service-container\">\n          <div class=\"frequent-services\" *ngIf=\"recentUsedService.length\">\n            <h3 class=\"frequent-header\">Recently Used</h3>\n            <div class=\"recent-activity\">\n              <a [href]=\"menu.page_url\" target=\"_blank\" class=\"frequent-list-items\" *ngFor=\"let menu of recentUsedService\">\n                <span class=\"sub-menu-item\">\n                  {{menu.alias || menu.title}}\n                </span>\n              </a>\n            </div>\n          </div>\n          <div class=\"menu-list\">\n            <div class=\"search-services\">\n              <div class=\"form-search desktop\">\n                <input type=\"text\" [(ngModel)]=\"searchService\" placeholder=\"Search Services\" class=\"search-input\" />\n                <span class=\"fa fa-search\"></span>\n              </div>\n              <div class=\"form-search mobile\">\n                <i class=\"material-icons search-icon\">search</i>\n                <input type=\"text\" [(ngModel)]=\"searchService\" placeholder=\"Search Services\" class=\"search-input-mobile\" />\n              </div>\n            </div>\n            <div class=\"menu-services\" DynamicHeight>\n              <div class=\"menu-service-group\" *ngFor=\"let obj of serviceMenu.service, let i=index\">\n                <p *ngIf=\"(obj.submenu | filterByGroup : {'title' : searchService} : false).length\"\n                  class=\"service-title semi-bold\" [hidden]=\"!obj.display\">{{obj.grouptitle}}</p>\n                <a [href]=\"menu.page_url\" target=\"_blank\"\n                  *ngFor=\"let menu of (obj.submenu | filterByGroup : {'title' : searchService} : false)\"\n                  [hidden]=\"!menu.display\" (click)=\"recentUsed(menu)\">\n                  <span class=\"sub-menu-item\">\n                    {{menu.title}}\n                  </span>\n                </a>\n              </div>\n\n              <!-- sochna -->\n              <div *ngIf=\"mobileListArr\" DynamicHeight>\n                <div class=\"menu-services-mob-group\" *ngFor=\"let obj of mobileListArr, let i=index\">\n                  <p *ngIf=\"(obj.submenu | filterByGroup : {'title' : searchService} : false).length\"\n                    class=\"service-title semi-bold\" [hidden]=\"!obj.display\">{{obj.grouptitle}}</p>\n                  <a [href]=\"menu.page_url\" target=\"_blank\"\n                    *ngFor=\"let menu of (obj.submenu | filterByGroup : {'title' : searchService} : false)\"\n                    [hidden]=\"!menu.display\" (click)=\"recentUsed(menu)\">\n                    <span class=\"sub-menu-item\">\n                      {{menu.title}}\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ",
            styles: ["\n    .services-overlay{height:0;width:100%;position:fixed;z-index:1;left:0;top:0;overflow-y:hidden}.services-overlay.open{height:calc(100% - 80px);width:98%;top:65px;overflow-y:auto;background:white;margin:0 1%;border-top:none;box-shadow:2px 2px 4px 2px rgba(0,0,0,0.1)}.services-overlay ul{margin:0;padding:0}.services-overlay ul .nav-list{list-style:none;float:left;margin-left:30px}.services-overlay ul .nav-list a{font-family:OpenSans-SemiBold;text-decoration:underline;color:#F0503C;font-size:13px}.services-overlay ul .nav-list a:hover{opacity:1}.services-overlay ul .nav-list a.performance{text-decoration:none !important}.services-overlay ul .nav-list a .left-arrow{font-size:19px;line-height:12px;font-weight:bold}.services-overlay ul .nav-list a span{text-decoration:underline}.services-overlay .loading-text{font-size:20px}.services-overlay .service-overlay-content{position:relative;margin:30px}.services-overlay .service-overlay-content p{color:#666;font-family:Opensans-Semibold;font-size:14px}.services-overlay .service-overlay-content .service-container{display:flex}.services-overlay .service-overlay-content .service-container .frequent-services{flex:1 1 15%;border-right:2px solid #afaaaa;padding-right:15px}.services-overlay .service-overlay-content .service-container .frequent-services .frequent-list-items{text-align:left}.services-overlay .service-overlay-content .service-container .frequent-services .frequent-header{text-align:left}.services-overlay .service-overlay-content .service-container .menu-list{flex:1 1 85%}.services-overlay .service-overlay-content .service-container .menu-list .search-services{margin:20px 40px}.services-overlay .service-overlay-content .service-container .menu-list .search-services .desktop{display:block}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile{display:none}.services-overlay .service-overlay-content .service-container .menu-list .search-services .form-search{position:relative}.services-overlay .service-overlay-content .service-container .menu-list .search-services .form-search span{position:absolute;right:8px;top:8px;color:#808080;font-size:14px}.services-overlay .service-overlay-content .service-container .menu-list .search-services .search-input{width:calc(100% - 10px);padding:3px 5px;border:none;box-shadow:none !important;border-radius:0;border-bottom:1px solid #a6a6a6;font-size:14px;line-height:21px;color:#414042;margin-bottom:10px;background:transparent}.services-overlay .service-overlay-content .service-container .menu-list .search-services .search-input:focus{border-color:red;outline:none;box-shadow:none}.services-overlay .service-overlay-content .service-container .menu-list .menu-services{display:flex;flex-flow:column wrap;min-height:450px;width:calc(100% - 80px);align-content:flex-start;padding-left:40px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group,.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-services-mob-group{width:20%;text-align:left;margin-right:40px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group .service-title,.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-services-mob-group .service-title{text-transform:capitalize;font-weight:300;color:#F0503C;font-size:16px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group .no-result,.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-services-mob-group .no-result{position:absolute;width:calc(100% - 275px);text-align:center}.services-overlay a{display:inherit;margin:5px}.services-overlay a .sub-menu-item{font-size:14px;color:#323232}.services-overlay a .sub-menu-item:hover{color:#e47911}.services-overlay .close-btn{position:absolute;right:5px;top:5px;cursor:pointer}.services-overlay .close-btn:hover{color:#F0503C;transition:.2s linear}.no-services{color:black}.service-menu-wrap{width:auto;display:block}[hidden]{display:none !important}@media screen and (max-width: 768px){.services-overlay{width:100% !important;margin:0 !important}.services-overlay .close-btn{display:none;position:absolute;right:5px;top:5px;cursor:pointer;z-index:9999}.services-overlay .close-btn:hover{color:#F0503C;transition:.2s linear}.services-overlay.open{top:57px}.services-overlay .service-overlay-content{margin:0;padding:10px 10px 20px 10px}.services-overlay .service-overlay-content .service-container{display:block;padding:0}.services-overlay .service-overlay-content .service-container .frequent-services{border-right:none;padding-right:15px;text-align:left;padding-bottom:10px;margin:0 0 10px 0;border-bottom:1px dashed #ccc;display:none}.services-overlay .service-overlay-content .service-container .menu-list{padding:0;margin:0}.services-overlay .service-overlay-content .service-container .menu-list .search-services{margin:0px 0px 20px 0}.services-overlay .service-overlay-content .service-container .menu-list .search-services .desktop{display:none}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile{display:block}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile i.search-icon{position:absolute;left:5px;top:8px;cursor:pointer;color:#b8b5b5;font-size:22px;display:inline}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile .search-input-mobile{width:calc(100% - 43px);padding:8px 8px 8px 30px;background:#eee;border:1px solid transparent;border-radius:5px;font-size:13px;line-height:21px}.services-overlay .service-overlay-content .service-container .menu-list .search-services .mobile .search-input-mobile:focus{outline:none}.services-overlay .service-overlay-content .service-container .menu-list .menu-services{flex-flow:row wrap;margin:20px 0;padding:0}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group{width:100%;margin-right:0;display:none}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-services-mob-group{display:block;width:100%;margin-bottom:15px}}\n  "]
        }),
        __metadata("design:paramtypes", [MatMenuService, MatCenterService, CookiesService, PermissionService])
    ], DlvMatServicesMenuOverlayComponent);
    return DlvMatServicesMenuOverlayComponent;
}());
export { DlvMatServicesMenuOverlayComponent };
//# sourceMappingURL=services-menu-overlay.component.js.map