import { OnInit, DoCheck, EventEmitter } from '@angular/core';
import { PermissionService, MatMenuService, CookiesService, MatCenterService } from '../shared/services';
import { overlayInterface } from './overlayConfiguration.interface';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import 'rxjs/add/observable/throw';
export declare class DlvMatServicesMenuOverlayComponent implements OnInit, DoCheck {
    private menuService;
    private centerService;
    private cookies;
    private permission;
    profile: object;
    open: boolean;
    onError: EventEmitter<any>;
    onCloseModal: EventEmitter<boolean>;
    mobileMenuList: {
        fm: string;
        lm: string;
        db: string;
    };
    private umsPermission;
    private HQPermission;
    private allPermission;
    private isUms;
    private isHq;
    serviceMenu: overlayInterface;
    private filter;
    private errMsg;
    private urlLink;
    homeUrlLink: string;
    private superUser;
    private navLink;
    private getRecent;
    private recentUsedService;
    private env;
    private mobileListArr;
    mobMenuHide: boolean;
    constructor(menuService: MatMenuService, centerService: MatCenterService, cookies: CookiesService, permission: PermissionService);
    ngOnInit(): void;
    ngDoCheck(): void;
    updateMobileList(serviceList: any): void;
    /**
     * @name getServicesMenu
     * @description This method is using to set menu service as per user's permissions which are based on ums and hq
     */
    private getServicesMenu;
    /**
     * @name getUms
     * @description This method is using to get all permission assigned to logged in user.
     */
    private getUms;
    /**
     * @name getHQ
     * @description This method is using to get all permission assigned to logged in user in hq.
     */
    private getHQ;
    /**
     * @name recentUsed
     * @description this function is arranging the recent services on the basis of latest click and storing it to cookie
     * @param obj
     *
     */
    private recentUsed;
    private onClose;
}
