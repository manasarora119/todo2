var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ElementRef, HostBinding } from '@angular/core';
var DynamicHeight = /** @class */ (function () {
    function DynamicHeight(el) {
        this.el = el;
        this.height = 0;
    }
    DynamicHeight.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            var intialHeight = 0;
            var childLength = _this.el.nativeElement.children.length;
            for (var i = 0; i < childLength; i++) {
                intialHeight += _this.el.nativeElement.children[i].offsetHeight;
            }
            _this.height = intialHeight / 3;
        }, 0);
    };
    __decorate([
        HostBinding('style.max-height.px'),
        __metadata("design:type", Number)
    ], DynamicHeight.prototype, "height", void 0);
    DynamicHeight = __decorate([
        Directive({
            selector: '[DynamicHeight]',
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], DynamicHeight);
    return DynamicHeight;
}());
export { DynamicHeight };
//# sourceMappingURL=dynamic-height.directive.js.map