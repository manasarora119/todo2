{"version":3,"file":"permission.service.js","sourceRoot":"","sources":["../../../../tmp/src-inlined/dlv-ng-services-menu/shared/services/permission.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpResponse, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/throw';\n\nimport { MenuService } from './menu.service';\nimport { CookiesService } from './cookies.service';\nimport { DlvHttpService } from 'dlv-ng-auth';\n\n@Injectable()\nexport class PermissionService {\n    private umsApiUrl: string;\n    private hqApiUrl: string;\n    private configApiUrl: string;\n    private serviceMenuEmit: EventEmitter<any> = new EventEmitter<any>()\n    private hqPermission: Array<any> = [];\n    private umsPermission: Array<any> = [];\n    private serviceMenu: Array<any> = [];\n    private navigationLink: any;\n    private recentServices;\n    private urlLink: string;\n    private env: string;\n    private displayService: boolean;\n    public umsPermArr: Array<any> = [];\n    public hqPermArr: Array<any> = [];\n    // private allServicesMenu : Array<any> = [];\n\n    constructor(\n        private cookies: CookiesService,\n        private menuService: MenuService,\n        private httpService: DlvHttpService\n    ) {\n        this.env = menuService.getOptions()['environment'];\n        this.urlLink = menuService.getUrlLink()[this.env];\n    }\n\n\n    /**\n     * @name getServicesMenu\n     * @description This method is firing an api to bring the whole json of service menu\n     */\n    public getServicesMenu() {\n        this.configApiUrl = this.menuService.getConfigUrl();\n        const option = {\n            url: `${this.configApiUrl}/config?file=menu.json`,\n            method: 'GET',\n            skipAuthorization: false\n        };\n\n        return this.httpService.httpRequest(option)\n            .pipe(\n                catchError(this.httpService.handleError),\n                map(this.httpService.responseData)\n            );\n\n    }\n\n    /**\n     * @name This method is containing array of services which are assigned to user on the hq and ums permission basis and\n     * It is called in service-menu-overlay.\n     * @param menu : menu is stroing array of services\n     */\n    public setServiceName(menu) {\n\n        this.serviceMenu = [...menu];\n        this.navigationLink = this.serviceMenu.splice(0, 1);\n\n    }\n\n    /**\n     * @name createPermissionUms\n     * @description it is storing permissions in array through ums api\n     * @param res\n     */\n    public createPermissionUms(res) {\n        const perm = res['permissions'];\n\n        for (let i = 0; i < perm.length; i++) {\n            this.umsPermArr.push(perm[i].name);\n        }\n    }\n\n\n    /**\n     * @name hasPerformancePerm\n     * @description checking whether the user have access to My Performance Link\n     * @param urlEndPoint http url for the go to home link\n     * @param umsPermissions\n     */\n    public hasPerformancePerm(urlEndPoint, umsPermissions) {\n\n        this.navigationLink[0].display = false;\n        this.navigationLink[0]['submenu'][0].display = false;\n        this.navigationLink[0]['submenu'][0].url = `${urlEndPoint}${this.navigationLink[0]['submenu'][0].url}`;\n        if (umsPermissions.indexOf('can_view_lm_tl_rating') > -1) {\n\n            const url = this.menuService.getApiUrl('performance');\n            this.navigationLink[0]['submenu'][1].url = `${url}${this.navigationLink[0]['submenu'][1].url}`\n            this.navigationLink[0]['submenu'][1].tlLink = true;\n            this.navigationLink[0]['submenu'][1].display = false;\n            return this.navigationLink[0].submenu;\n\n        } else {\n\n            const tempArr = [];\n            tempArr.push(this.navigationLink[0].submenu[0])\n            return tempArr;\n        }\n    }\n\n    /**\n     * @name umsPermArray\n     * @description It is returning permission array through above function\n     */\n    public getUmsPermArray() {\n        return this.umsPermArr;\n    }\n\n\n    /**\n     * @name createPermissionHq\n     * @description it is storing permissions in array through HQ api\n     * @param res\n     */\n    public createPermissionHq(res) {\n        const perm = res['perms'];\n        for (let i = 0; i < perm.length; i++) {\n            this.hqPermArr.push(perm[i])\n        }\n    }\n\n    public getHqPermArray() {\n        return this.hqPermArr;\n    }\n    /**\n     * @name getHQPermission\n     * @description Get Permission from HQ\n     */\n\n    public getHQPermission() {\n        this.hqApiUrl = this.menuService.getApiUrl('hq');\n        // return Constant.HQ_PERMISSION;\n        const option = {\n            url: `${this.hqApiUrl}/api/backend/fetch-permission`,\n            method: 'GET',\n            skipAuthorization: false\n        };\n\n        return this.httpService.httpRequest(option)\n            .pipe(\n                catchError(this.httpService.handleError),\n                map(this.httpService.responseData)\n            );\n    }\n\n\n\n    /**\n     * @name getUMSPermissions\n     * @description Get Permission from UMS\n     * @param uuid : It is containing user profile ums id\n     */\n    public getUMSPermissions(uuid) {\n        this.umsApiUrl = this.menuService.getApiUrl('ums');\n\n        const option = {\n            url: `${this.umsApiUrl}/user_roles/${uuid}/`,\n            method: 'GET',\n            skipAuthorization: false\n        };\n\n        return this.httpService.httpRequest(option)\n            .pipe(\n                catchError(this.httpService.handleError),\n                map(this.httpService.responseData)\n            );\n\n    }\n    // Merging ums and hq permission\n    /**\n         * @name mergePermission\n         * @description Merging ums and hq permission\n         * @param obj1 :\n         * @param obj2 :\n         */\n    public mergePermission(obj1, obj2) {\n        const isActiveStaff = this.menuService.getActiveStaff();\n        let obj = obj2.concat(obj1);\n        if (isActiveStaff) {\n            obj = obj.concat('show_frontend_menu');\n        }\n        return obj;\n    }\n\n    /**\n     * @name updatedPermission\n     * @description This method upated and show services in menu to user after merging service from hq and ums to user\n     * @param permission It is storing array of service types of permisssions\n     */\n    public updatedPermission(permission?) {\n\n        if (permission && permission.length) {\n            return this.isPermission(permission);\n        } else if (permission && !permission.length) {\n            this.displayService = false;\n            this.serviceMenuEmit.emit([]);\n            return [];\n        } else {\n            return this.isNotPermission();\n        }\n    }\n    /**\n     * @name isPermission\n     * @description This method checks already present services in menu which are assigned to user on permission basis of hq and ums\n     * @param permission : It is storing an array of types of permissions to user\n     */\n    private isPermission(permission) {\n        this.displayService = false;\n        for (const value of this.serviceMenu) {\n            for (const val of value['submenu']) {\n                for (const perm of val['permission']) {\n                    /**\n                     * In this condition display property to the permission object gets appended in case\n                     * a user have permission to displayit on html\n                    */\n                    if (permission.indexOf(perm) > 0) {\n                        this.appendDisplayService(value, val);\n\n                    }\n                }\n            }\n        }\n\n        this.serviceMenuEmit.emit(this.serviceMenu);\n\n        const obj: any = {\n            service: this.serviceMenu,\n            display: this.displayService\n        };\n\n        return obj;\n    }\n\n    /**\n     * @name isNotPermission\n     * @description This method checks if service is in service menu and user have permission in sub menu to display\n     * then it will show the service in menu overlay.\n     */\n    private isNotPermission() {\n        this.displayService = false;\n        for (const value of this.serviceMenu) {\n            for (const val of value['submenu']) {\n                this.appendDisplayService(value, val);\n            }\n        }\n\n        this.serviceMenuEmit.emit(this.serviceMenu);\n\n        const obj: any = {\n            service: this.serviceMenu,\n            display: this.displayService\n        };\n        return obj;\n    }\n\n    /**\n     * @name appendDisplayService\n     * @description This method append display service based on user's permissions\n     * @param value : Value is group of menu objects\n     * @param val : val is storing multiple service of main object\n     */\n    public appendDisplayService(value, val) {\n        this.displayService = true;\n        value['display'] = true;\n        val['display'] = true;\n\n        // It is checking if service is coming from hq then it add url according to the condition\n        if (!val['isNotHQ']) {\n            val['page_url'] = `${this.urlLink}${val['url']}`;\n        } else {\n            val['page_url'] = val['url'][this.env];\n        }\n    }\n\n    /**\n     * @name isServiceMenu\n     * @description This method is called in service menu component to load service menu\n     */\n    public isServiceMenu() {\n        return this.serviceMenuEmit;\n    }\n\n    /**\n     * @name recentServiceFilter\n     * @description This method is used to show current used service from service menu\n     * @param as for all Service\n     * @param rs for recent Service\n     */\n\n    public recentServiceFilter(asm, rs) {\n\n        const recent = [];\n        if (rs.length) {\n            for (const res of rs) {\n                for (const value of asm.service) {\n                    for (const sub of value['submenu']) {\n\n                        if (res === sub['title'] && sub.display) {\n                            recent.push(sub);\n                        }\n                    }\n                }\n            }\n        }\n        return recent;\n    }\n}\n"]}