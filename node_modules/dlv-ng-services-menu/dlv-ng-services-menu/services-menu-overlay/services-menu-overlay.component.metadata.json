[{"__symbolic":"module","version":4,"metadata":{"ServicesMenuOverlayComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"delhivery-services-menu-overlay","template":"\n    <div class=\"services-overlay\" [ngClass]=\"{'open': open}\" *ngIf=\"serviceMenu\">\n        <ul *ngIf=\"navLink.length\">\n            <li class=\"nav-list\" *ngFor=\"let nav of navLink\">\n                <a href=\"{{nav.url}}\" target=\"{{(nav.tlLink) ? '_blank' : '_self'}}\" [ngClass]=\"{'performance': nav.tlLink}\">\n                    <span class=\"left-arrow\" *ngIf=\"!nav.tlLink\">&larr;</span>&nbsp;\n                    <span>{{nav.title}}</span>\n                </a>\t\n            </li>\n        </ul>\n        <div class=\"service-overlay-content\" *ngIf=\"!serviceMenu.display\">\n            <p>No Services Menu</p>\n        </div>\n        <div *ngIf=\"serviceMenu.display\" class=\"service-overlay-content\">\n\n            <div class=\"service-container\">\n                <div class=\"frequent-services\" *ngIf=\"recentUsedService.length\">\n                    <h3 class=\"frequent-header\">Recently Used</h3>\n                    <div class=\"recent-activity\">\n                        <a [href]=\"menu.page_url\" target=\"_blank\" class=\"frequent-list-items\" *ngFor=\"let menu of recentUsedService\">\n                            <span class=\"sub-menu-item\">\n                                {{menu.alias || menu.title}}\n                            </span>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"menu-list\">\n                    <div class=\"search-services\">\n                        <div class=\"form-search\">\n                            <input type=\"text\" [(ngModel)]=\"searchService\" placeholder=\"Search Services\" class=\"search-input\" />\n                            <span class=\"fa fa-search\"></span>\n                        </div>\n                    </div>\n                    <div class=\"menu-services\" DynamicHeight>\n                        <div class=\"menu-service-group\" *ngFor=\"let obj of serviceMenu.service, let i=index\">\n                            <p *ngIf=\"(obj.submenu | filterByGroup : {'title' : searchService} : false).length\" class=\"service-title semi-bold\" [hidden]=\"!obj.display\">{{obj.grouptitle}}</p>\n                            <a [href]=\"menu.page_url\" target=\"_blank\" *ngFor=\"let menu of (obj.submenu | filterByGroup : {'title' : searchService} : false)\" [hidden]=\"!menu.display\" (click)=\"recentUsed(menu)\">\n                                <span class=\"sub-menu-item\">\n                                    {{menu.title}}\n                                </span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  ","styles":["\n    .services-overlay{height:0;width:100%;position:fixed;z-index:1;left:0;top:0;overflow-y:hidden}.services-overlay.open{height:calc(100% - 50px);width:98%;top:40px;overflow-y:auto;background:white;border:1px solid #c3bdbd;margin:0 1%;border-top:none}.services-overlay ul{margin:0;padding:0}.services-overlay ul .nav-list{list-style:none;float:left;margin-left:30px}.services-overlay ul .nav-list a{font-family:OpenSans-SemiBold;text-decoration:underline;color:#F0503C;font-size:13px}.services-overlay ul .nav-list a:hover{opacity:1}.services-overlay ul .nav-list a.performance{text-decoration:none !important}.services-overlay ul .nav-list a .left-arrow{font-size:19px;line-height:12px;font-weight:bold}.services-overlay ul .nav-list a span{text-decoration:underline}.services-overlay .loading-text{font-size:20px}.services-overlay .service-overlay-content{position:relative;margin:30px}.services-overlay .service-overlay-content p{color:#666;font-family:Opensans-Semibold;font-size:14px}.services-overlay .service-overlay-content .service-container{display:flex}.services-overlay .service-overlay-content .service-container .frequent-services{flex:1 1 15%;border-right:2px solid #afaaaa;padding-right:15px}.services-overlay .service-overlay-content .service-container .frequent-services .frequent-list-items{text-align:left}.services-overlay .service-overlay-content .service-container .frequent-services .frequent-header{text-align:left}.services-overlay .service-overlay-content .service-container .menu-list{flex:1 1 85%}.services-overlay .service-overlay-content .service-container .menu-list .search-services{margin:20px 40px}.services-overlay .service-overlay-content .service-container .menu-list .search-services .form-search{position:relative}.services-overlay .service-overlay-content .service-container .menu-list .search-services .form-search span{position:absolute;right:8px;top:8px;color:#808080;font-size:14px}.services-overlay .service-overlay-content .service-container .menu-list .search-services .search-input{width:calc(100% - 10px);padding:3px 5px;border:none;box-shadow:none !important;border-radius:0;border-bottom:1px solid #a6a6a6;font-size:14px;line-height:21px;color:#414042;margin-bottom:10px;background:transparent}.services-overlay .service-overlay-content .service-container .menu-list .search-services .search-input:focus{border-color:red;outline:none;box-shadow:none}.services-overlay .service-overlay-content .service-container .menu-list .menu-services{display:flex;flex-flow:column wrap;min-height:450px;width:calc(100% - 80px);align-content:flex-start;padding-left:40px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group{width:20%;text-align:left;margin-right:40px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group .service-title{text-transform:capitalize;font-weight:300;color:#F0503C;font-size:16px}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group .no-result{position:absolute;width:calc(100% - 275px);text-align:center}.services-overlay a{display:inherit;margin:5px}.services-overlay a .sub-menu-item{font-size:14px;color:#323232}.services-overlay a .sub-menu-item:hover{color:#e47911}.no-services{color:black}.service-menu-wrap{width:auto;display:block}[hidden]{display:none !important}@media screen and (max-width: 640px){.services-overlay.open{top:100px}.services-overlay .service-overlay-content{margin:0;padding:20px 10px}.services-overlay .service-overlay-content .service-container{display:block;padding:0}.services-overlay .service-overlay-content .service-container .frequent-services{border-right:none;padding-right:15px;text-align:left;padding-bottom:10px;margin:0 0 10px 0;border-bottom:1px dashed #ccc}.services-overlay .service-overlay-content .service-container .menu-list{padding:0;margin:0}.services-overlay .service-overlay-content .service-container .menu-list .search-services{margin:20px 0}.services-overlay .service-overlay-content .service-container .menu-list .menu-services{flex-flow:row wrap;margin:20px 0;padding:0}.services-overlay .service-overlay-content .service-container .menu-list .menu-services .menu-service-group{width:100%;margin-right:0}}\n  "]}]}],"members":{"profile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":3}}]}],"open":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":3}}]}],"onError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":67,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../shared/services","name":"MenuService","line":88,"character":36},{"__symbolic":"reference","module":"../shared/services","name":"CenterService","line":88,"character":72},{"__symbolic":"reference","module":"../shared/services","name":"CookiesService","line":88,"character":105},{"__symbolic":"reference","module":"../shared/services","name":"PermissionService","line":88,"character":142}]}],"ngOnInit":[{"__symbolic":"method"}],"ngDoCheck":[{"__symbolic":"method"}],"getServicesMenu":[{"__symbolic":"method"}],"getUms":[{"__symbolic":"method"}],"getHQ":[{"__symbolic":"method"}],"recentUsed":[{"__symbolic":"method"}]}}}}]