{"version":3,"file":"auto-complete.component.js","sourceRoot":"","sources":["../../../tmp/src-inlined/dlv-ng-services-menu/auto-complete-center/auto-complete.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAA;AACvE,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAuB,MAAM,gBAAgB,CAAC;AAEnE,IAAM,mBAAmB,GAAC,GAAG,CAAA,CAAC,oBAAoB;AAClD,IAAM,uBAAuB,GAAC,CAAC,CAAA,CAAC,uBAAuB;AA8BvD;IAgBE,sBAAoB,YAAiC,EAAU,aAA4B;QAAvE,iBAAY,GAAZ,YAAY,CAAqB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAXjF,mBAAc,GAAsB,IAAI,YAAY,EAAO,CAAC;QAG/D,aAAQ,GAAY,KAAK,CAAC;QACjC,qCAAqC;QAC9B,YAAO,GAAY,KAAK,CAAC;QACxB,WAAM,GAAY,KAAK,CAAC;QACxB,kBAAa,GAAY,KAAK,CAAC;QAEvC,gBAAW,GAAqB,IAAI,OAAO,EAAE,CAAC;IAEiD,CAAC;IAGhG,+BAAQ,GAAR;QAAA,iBAiCC;QAhCE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;YAC/D,IAAG,KAAK,CAAC,MAAM,IAAI,uBAAuB,EAAE;gBAC1C,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAI,CAAC,aAAa,CAAC;qBACvE,IAAI,CAAC,UAAA,QAAQ;oBACZ,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,wBAAwB;oBAExB,4HAA4H;oBAC5H,IAAI,KAAI,CAAC,MAAM,EAAE;wBACf,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;qBAC1B;oBACD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC7B,CAAC,EAAE,UAAA,KAAK;oBACN,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,yBAAyB;oBACzB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBAErB,kBAAkB;oBAClB,IAAI,KAAK,EAAE;wBACT,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;qBACvB;yBAAM,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;wBACvB,wBAAwB;wBACxB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;qBACvB;gBAEH,CAAC,CAAC,CAAA;aACH;QACT,CAAC,CAAC,CAAA;IAEN,CAAC;IACD,EAAE;IACF;;;;OAIG;IACH,iCAAU,GAAV,UAAW,KAAK;QACd,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAED;;;;OAIG;IACH,6BAAM,GAAN,UAAO,GAAG,EAAE,KAAM;QAChB,sBAAsB;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,yBAAyB;YACzB,+EAA+E;YAC/E,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;YACH,sBAAsB;SACrB;QACD,uFAAuF;aAClF;YACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;IAEH,CAAC;IAED;;;;;OAKG;IACH,qCAAc,GAAd,UAAe,MAAM;QACnB,IAAI,YAAY,GAAG;YACjB,WAAW,EAAE,MAAM,CAAC,IAAI;YACxB,WAAW,EAAE,MAAM,CAAC,aAAa;SAClC,CAAA;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,wDAAwD;IAClG,CAAC;IAED;;;OAGG;IACH,wCAAiB,GAAjB;QACE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAhHQ;QAAR,KAAK,EAAE;;+CAAe;IACd;QAAR,KAAK,EAAE;;qDAAqB;IAEnB;QAAT,MAAM,EAAE;kCAAiB,YAAY;wDAAgC;IAL3D,YAAY;QA5BxB,SAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,QAAQ,EAAE,y3BAqBT;YACD,MAAM,EAAE,CAAC,0mDAER,CAAC;SACH,CAAC;yCAiBkC,mBAAmB,EAAyB,aAAa;OAhBhF,YAAY,CAoHxB;IAAD,mBAAC;CAAA,AApHD,IAoHC;SApHY,YAAY","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CenterService, AutoCompleteService } from '../shared/services'\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged} from 'rxjs/operators';\n\nconst DEBOUNCE_TIME_LIMIT=500 //  500 mili seconds\nconst MIN_INPUT_CHAR_REQUIRED=2 // alteast 2 characters\n\n@Component({\n  selector: 'auto-complete-center',\n  template: `\n    <div class=\"center-form-search\">\n        <input type=\"text\"\n            [placeholder]=\"placeholder\"\n            class=\"search-center\"\n            [(ngModel)]=\"inputValue\"\n            (ngModelChange)=\"filter(inputValue, $event)\"\n            (paste)=\"pasteEvent($event)\" />\n        <span class=\"fa fa-search\"></span>\n    </div>\n    <ul class=\"center-list inputDisplay\" *ngIf=\"itemList && itemList.length\">\n        <li class=\"center-name-list\" (click)=\"onCenterSelect(item)\" *ngFor=\"let item of itemList\">\n            {{item.name}}\n        </li>\n    </ul>\n    <p class=\"no_result\" *ngIf=\"!isLoader && itemList && !itemList.length\">No Search Result.</p>\n    <p class=\"no_result\" *ngIf=\"isError\">Not able to fetch centers.</p>\n\n    <div class=\"loader\" *ngIf=\"isLoader\">\n        <span class=\"line-spinner\"></span>\n    </div>\n  `,\n  styles: [`\n    .centerName{text-align:center}.centerName span{cursor:pointer}.center-form-search{position:relative}.center-form-search span{position:absolute;right:8px;top:8px;color:#808080}.search-center{width:calc(100% - 10px);padding:3px 5px;border:none;box-shadow:none !important;border-radius:0;border-bottom:1px solid #a6a6a6;font-size:12px;line-height:21px;color:#414042;margin-bottom:10px;background:transparent}.search-center:focus{border-color:red;outline:none;box-shadow:none}.center-list{margin:0 0;border-radius:1px;font-size:12px;color:#414042;background:#ffffff;padding:0;margin:0;max-height:140px;text-align:left;overflow-y:auto;width:100%}.center-list .center-name-list{list-style:none;margin-bottom:4px;width:calc(100% - 10px);cursor:pointer;font-size:14px;padding:4px 5px;display:block;border-bottom:1px dashed #cccccc;transition:all 0.3s linear}.center-list .center-name-list:hover{background:#ececec}.single-center{font-size:15px;text-align:center;margin:18% 0}.single-center .single-center-name{font-size:18px;margin-top:10px;display:block}.no-center{font-size:16px;text-align:center;margin:22% 0}.no_result{color:#000}.loading-centers{background:#BDBDBD;position:absolute;width:100%;height:100%}.loading-centers .status{top:40%;text-align:center;position:relative}.loader{margin-top:10px}.line-spinner{border:3px solid #000;border-top:3px solid rgba(255,0,0,0);border-radius:50%;width:20px;height:20px;-webkit-animation:spin 2s linear infinite;animation:spin 1s linear infinite;display:inline-block;vertical-align:middle;margin:0 auto;display:table}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\n  `]\n})\nexport class AutoComplete implements OnInit {\n\n  @Input() label: string;\n  @Input() placeholder: string;\n\n  @Output() onCenterChange: EventEmitter<any> = new EventEmitter<any>();\n\n  public itemList;\n  public isLoader: boolean = false;\n  // public isResult : boolean = false;\n  public isError: boolean = false;\n  private isData: boolean = false;\n  private isPasteCenter: boolean = false;\n  public inputValue: string;\n  customInput : Subject<string> = new Subject();\n\n  constructor(private autoComplete: AutoCompleteService, private centerService: CenterService) { }\n\n\n  ngOnInit() {\n     this.customInput.pipe(debounceTime(DEBOUNCE_TIME_LIMIT)).subscribe(value => {\n              if(value.length >= MIN_INPUT_CHAR_REQUIRED) {\n                this.autoComplete.getCenterList(value.toLowerCase(), this.isPasteCenter)\n                .then(response => {\n                  this.isLoader = false;\n                  // this.isResult = true;\n\n                  // this is checking if there is any data(centers) mathces to user's search then it stored in itemList which is in array form\n                  if (this.isData) {\n                    this.itemList = response;\n                  }\n                  this.isPasteCenter = false;\n                }, error => {\n                  this.isPasteCenter = false;\n                  this.itemList = false;\n                  this.isLoader = false;\n                  // this.isResult = false;\n                  this.isError = false;\n\n                  // checking errors\n                  if (error) {\n                    this.isError = true;\n                    this.isLoader = false;\n                  } else if (!this.isData) {\n                    // this.isResult = true;\n                    this.isLoader = false;\n                  }\n\n                })\n              }\n      })\n\n  }\n  //\n  /**\n   * @name pasteEvent\n   * @description This is for paste event, if user paste the center in input field\n   * @param event It is containing paste event\n   */\n  pasteEvent(event) {\n    if (event['type'] === \"paste\") {\n      this.isPasteCenter = true;\n    }\n  }\n\n  /**\n   * @name filter\n   * @description it is checking length of string if it is greater than or equal to 2 den it will only show the itemlist\n   * @param val : it is containing value which user enter in input field to search\n   */\n  filter(val, event?) {\n    // debounce the input \n    this.customInput.next(val)\n    this.isError = false;\n    if (val && val.length >= 2) {\n      this.isLoader = true;\n      this.isData = true;\n      // this.isResult = false;\n      // This condition checks length of input value field which should be equal to 2\n      if (val.length === 2) {\n        this.itemList = false;\n      }\n    // debounce the input \n    }\n    // If val is not greater than or eqaul to 2 then it will not show any itemlist and data\n    else {\n      this.isData = false;\n      this.itemList = false;\n      this.isLoader = false;\n    }\n\n  }\n\n  /**\n   * @name onCenterSelect\n   * @description selecting center name and code on behalf of facility id,key and name and emitting the center.\n   * @param center: center is storing facility id,facility integration key and facility name\n   *\n   */\n  onCenterSelect(center) {\n    let selectCenter = {\n      center_name: center.name,\n      center_code: center.facility_code\n    }\n    this.closeSearchCenter();\n    this.onCenterChange.emit(selectCenter); // here selectCenter is storing selected center and code\n  }\n\n  /**\n   * @name closeSearchCenter\n   * @description after select center from search, this fucntion is called to close search dropdown\n   */\n  closeSearchCenter() {\n    this.centerService.setCheckModel(true);\n  }\n\n}\n\n"]}